AWSTemplateFormatVersion: "2010-09-09"
Description: A template to create resources to manage device connectivity
Parameters:
  BucketName:
    Type: String
Resources:
  DynamoDBTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: DeviceConnectivity
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: ClientID
          AttributeType: S
      KeySchema:
        - AttributeName: ClientID
          KeyType: HASH
  LambdaRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - "sts:AssumeRole"
      Policies:
        - PolicyName: AWSLambdaBasicExecutionRole-LifeCycleEvent
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action: "logs:CreateLogGroup"
                Resource: !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:*
              - Effect: Allow
                Action:
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/LifeCycleEvent:*
        - PolicyName: LifeCycleEventLambda-DynamoDBPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:PutItem
                  - dynamodb:GetItem
                Resource: !GetAtt DynamoDBTable.Arn
  LambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: LifeCycleEvent
      Code:
        S3Bucket: !Ref BucketName
        S3Key: lifecycle/lambda_function.zip
      Handler: lambda_function.lambda_handler
      Runtime: python3.9
      Role: !GetAtt LambdaRole.Arn
  IoTRule:
    Type: AWS::IoT::TopicRule
    Properties:
      RuleName: LifeCycleEventLambdaRule
      TopicRulePayload:
        RuleDisabled: false
        Sql: !Sub "SELECT * FROM '$aws/events/presence/+/+'"
        Actions:
          - Lambda:
              FunctionArn: !GetAtt LambdaFunction.Arn
  LambdaInvocationPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !GetAtt LambdaFunction.Arn
      Principal: iot.amazonaws.com
